[{"/Users/ben/Desktop/lattice/src/index.js":"1","/Users/ben/Desktop/lattice/src/App.js":"2","/Users/ben/Desktop/lattice/src/reportWebVitals.js":"3","/Users/ben/Desktop/lattice/src/components/List.jsx":"4","/Users/ben/Desktop/lattice/src/components/ListItem.jsx":"5","/Users/ben/Desktop/lattice/src/MockProductApiClient.js":"6","/Users/ben/Desktop/lattice/src/components/DisplayContainer.js":"7","/Users/ben/Desktop/lattice/src/components/Modal.jsx":"8"},{"size":221,"mtime":1612303510302,"results":"9","hashOfConfig":"10"},{"size":195,"mtime":1612303829902,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612297193337,"results":"12","hashOfConfig":"10"},{"size":921,"mtime":1612302854993,"results":"13","hashOfConfig":"10"},{"size":599,"mtime":1612302871672,"results":"14","hashOfConfig":"10"},{"size":1853,"mtime":1612300376855,"results":"15","hashOfConfig":"10"},{"size":1299,"mtime":1612303572732,"results":"16","hashOfConfig":"10"},{"size":343,"mtime":1612303475264,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14xov6s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ben/Desktop/lattice/src/index.js",[],"/Users/ben/Desktop/lattice/src/App.js",[],"/Users/ben/Desktop/lattice/src/reportWebVitals.js",[],"/Users/ben/Desktop/lattice/src/components/List.jsx",[],"/Users/ben/Desktop/lattice/src/components/ListItem.jsx",["34"],"/Users/ben/Desktop/lattice/src/MockProductApiClient.js",[],"/Users/ben/Desktop/lattice/src/components/DisplayContainer.js",["35","36"],"/Users/ben/Desktop/lattice/src/components/Modal.jsx",["37"],{"ruleId":"38","severity":1,"message":"39","line":14,"column":13,"nodeType":"40","endLine":14,"endColumn":38},{"ruleId":"41","severity":1,"message":"42","line":16,"column":15,"nodeType":"43","endLine":19,"endColumn":6},{"ruleId":"38","severity":1,"message":"39","line":24,"column":19,"nodeType":"40","endLine":24,"endColumn":41},{"ruleId":"38","severity":1,"message":"39","line":10,"column":13,"nodeType":"40","endLine":10,"endColumn":54},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]